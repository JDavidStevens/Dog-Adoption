{"version":3,"sources":["../node_modules/@reach/router/lib/history.js","Carousel.js","Modal.js","Details.js"],"names":["Carousel","state","photos","active","handleIndexClick","event","setState","target","dataset","index","React","Component","value","map","photo","media","filter","Modal","props","el","document","createElement","modalRoot","getElementById","appendChild","removeChild","children","Details","petfinder","key","secret","loading","LoadableContent","loader","showModal","toggleModal","pet","get","output","id","then","data","breed","Array","isArray","breeds","join","name","animal","location","contact","city","description","catch","err"],"mappings":"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","file":"Details.f304a5e8.map","sourceRoot":"..\\src","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar getLocation = function getLocation(source) {\n  return _extends({}, source.location, {\n    state: source.history.state,\n    key: source.history.state && source.history.state.key || \"initial\"\n  });\n};\n\nvar createHistory = function createHistory(source, options) {\n  var listeners = [];\n  var location = getLocation(source);\n  var transitioning = false;\n  var resolveTransition = function resolveTransition() {};\n\n  return {\n    get location() {\n      return location;\n    },\n\n    get transitioning() {\n      return transitioning;\n    },\n\n    _onTransitionComplete: function _onTransitionComplete() {\n      transitioning = false;\n      resolveTransition();\n    },\n    listen: function listen(listener) {\n      listeners.push(listener);\n\n      var popstateListener = function popstateListener() {\n        location = getLocation(source);\n        listener({ location: location, action: \"POP\" });\n      };\n\n      source.addEventListener(\"popstate\", popstateListener);\n\n      return function () {\n        source.removeEventListener(\"popstate\", popstateListener);\n        listeners = listeners.filter(function (fn) {\n          return fn !== listener;\n        });\n      };\n    },\n    navigate: function navigate(to) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          state = _ref.state,\n          _ref$replace = _ref.replace,\n          replace = _ref$replace === undefined ? false : _ref$replace;\n\n      state = _extends({}, state, { key: Date.now() + \"\" });\n      // try...catch iOS Safari limits to 100 pushState calls\n      try {\n        if (transitioning || replace) {\n          source.history.replaceState(state, null, to);\n        } else {\n          source.history.pushState(state, null, to);\n        }\n      } catch (e) {\n        source.location[replace ? \"replace\" : \"assign\"](to);\n      }\n\n      location = getLocation(source);\n      transitioning = true;\n      var transition = new Promise(function (res) {\n        return resolveTransition = res;\n      });\n      listeners.forEach(function (listener) {\n        return listener({ location: location, action: \"PUSH\" });\n      });\n      return transition;\n    }\n  };\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// Stores history entries in memory for testing or other platforms like Native\nvar createMemorySource = function createMemorySource() {\n  var initialPathname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n\n  var index = 0;\n  var stack = [{ pathname: initialPathname, search: \"\" }];\n  var states = [];\n\n  return {\n    get location() {\n      return stack[index];\n    },\n    addEventListener: function addEventListener(name, fn) {},\n    removeEventListener: function removeEventListener(name, fn) {},\n\n    history: {\n      get entries() {\n        return stack;\n      },\n      get index() {\n        return index;\n      },\n      get state() {\n        return states[index];\n      },\n      pushState: function pushState(state, _, uri) {\n        var _uri$split = uri.split(\"?\"),\n            pathname = _uri$split[0],\n            _uri$split$ = _uri$split[1],\n            search = _uri$split$ === undefined ? \"\" : _uri$split$;\n\n        index++;\n        stack.push({ pathname: pathname, search: search });\n        states.push(state);\n      },\n      replaceState: function replaceState(state, _, uri) {\n        var _uri$split2 = uri.split(\"?\"),\n            pathname = _uri$split2[0],\n            _uri$split2$ = _uri$split2[1],\n            search = _uri$split2$ === undefined ? \"\" : _uri$split2$;\n\n        stack[index] = { pathname: pathname, search: search };\n        states[index] = state;\n      }\n    }\n  };\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// global history - uses window.history as the source if available, otherwise a\n// memory history\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nvar getSource = function getSource() {\n  return canUseDOM ? window : createMemorySource();\n};\n\nvar globalHistory = createHistory(getSource());\nvar navigate = globalHistory.navigate;\n\n////////////////////////////////////////////////////////////////////////////////\n\nexports.globalHistory = globalHistory;\nexports.navigate = navigate;\nexports.createHistory = createHistory;\nexports.createMemorySource = createMemorySource;","import React from \"react\";\r\n\r\nclass Carousel extends React.Component {\r\n  state = {\r\n    photos: [],\r\n    active: 0\r\n  };\r\n\r\n  static getDerivedStateFromProps({ media }) {\r\n    let photos = [];\r\n\r\n    if (media && media.photos && media.photos.photo) {\r\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\r\n    }\r\n    return { photos };\r\n  }\r\n\r\n  //handleIndexClick = event =>{...} binds it to the onClick;\r\n  handleIndexClick = event => {\r\n    this.setState({\r\n      //+ changes string to number to match data type on state (coercion)\r\n      active: +event.target.dataset.index\r\n    });\r\n  };\r\n  render() {\r\n    const { photos, active } = this.state;\r\n    return (\r\n      <div className=\"carousel\">\r\n        <img src={photos[active].value} alt=\"primary animal\" />\r\n        <div className=\"carousel-smaller\">\r\n          {photos.map((photo, index) => (\r\n            /* eslint-disable-next-line*/\r\n            <img\r\n              onClick={this.handleIndexClick}\r\n              key={photo.value}\r\n              data-index={index}\r\n              src={photo.value}\r\n              className={index === active ? \"active\" : \"\"}\r\n              alt=\"animal thumbnail\"\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nclass Modal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.el = document.createElement(\"div\");\r\n    this.modalRoot = document.getElementById(\"modal\");\r\n    modalRoot.appendChild(this.el);\r\n  }\r\n\r\n  //almost always used to clean up memory (remove event listners,extraneous documents. Anything that is going to leak memory)\r\n  componentWillUnmount() {\r\n    this.modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return createPortal(this.props.children, this.el);\r\n  }\r\n}\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport pf from \"petfinder-client\";\r\nimport Loadable from \"react-loadable\";\r\nimport { navigate } from \"@reach/router/lib/history\";\r\nimport Carousel from \"./Carousel\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst petfinder = pf({\r\n  key: process.env.REACT_APP_API_KEY,\r\n  secret: process.env.REACT_APP_API_SECRET\r\n});\r\n\r\nconst loading = () => <h1>loading content ...</h1>;\r\n\r\nconst LoadableContent = Loadable({\r\n  loader: () => import(\"./AdoptModalContent\"),\r\n  loading\r\n});\r\n\r\nclass Details extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    showModal: false\r\n  };\r\n  toggleModal = () => this.setState({ showModal: !this.state.showModal });\r\n  componentDidMount() {\r\n    petfinder.pet\r\n      .get({ output: \"full\", id: this.props.id })\r\n      .then(data => {\r\n        const pet = data.petfinder.pet;\r\n        let breed;\r\n        if (Array.isArray(pet.breeds.breed)) {\r\n          breed = pet.breeds.breed.join(\", \");\r\n        } else {\r\n          breed = pet.breeds.breed;\r\n        }\r\n        this.setState({\r\n          name: pet.name,\r\n          animal: pet.animal,\r\n          location: `${pet.contact.city},${pet.contact.state}`,\r\n          description: pet.description,\r\n          media: pet.media,\r\n          breed,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(err => {\r\n        navigate(\"/\");\r\n      });\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <h1>loading ...</h1>;\r\n    }\r\n    const {\r\n      name,\r\n      animal,\r\n      breed,\r\n      description,\r\n      location,\r\n      media,\r\n      showModal\r\n    } = this.state;\r\n    return (\r\n      <div className=\"details\">\r\n        <Carousel media={media} />\r\n        <div>\r\n          <h1>{name}</h1>\r\n          <h2>\r\n            {animal} - {breed} - {location}\r\n          </h2>\r\n          <button onClick={this.toggleModal}>Adopt {name}</button>\r\n          <p>{description}</p>\r\n          {showModal ? (\r\n            <Modal>\r\n              <LoadableContent toggleModal={this.toggleModal} name={name} />\r\n            </Modal>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Details;\r\n"]}